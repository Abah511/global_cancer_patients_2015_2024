# -*- coding: utf-8 -*-
"""global_cancer_patients_2015_2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JT8W-uw-FUdpD0aj7hSsrba8kobXiLdL
"""

# Step 1: Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# Step 2: Upload the CSV file
uploaded = files.upload()

# Step 3: Load the dataset
df = pd.read_csv(next(iter(uploaded)))
df.columns = df.columns.str.strip()  # Remove any whitespace

# Step 4: Rename necessary columns for easier use
df.rename(columns={
    'Country_Region': 'country',
    'Cancer_Type': 'cancer_type',
    'Year': 'year'
}, inplace=True)

# Step 5: Table 1 - Country, Cancer Type, Year
table1 = df[['country', 'cancer_type', 'year']]
print(" Table 1: Country, Cancer Type, Year")
print(table1.head())

# Step 6: Add survivor classification based on Survival_Years
df['is_survivor'] = df['Survival_Years'] >= 5

# Step 7: Table 2 - Number of Patients, Deaths, Survivors
table2 = df.groupby(['country', 'cancer_type', 'year']).agg(
    patients=('Patient_ID', 'count'),
    survivors=('is_survivor', 'sum')
).reset_index()
table2['deaths'] = table2['patients'] - table2['survivors']

print("\n Table 2: Patients, Deaths, Survivors")
print(table2.head())

# Step 8: Table 3 - Survival Rate and Mortality Rate
table2['survival_rate'] = (table2['survivors'] / table2['patients']) * 100
table2['mortality_rate'] = (table2['deaths'] / table2['patients']) * 100

print("\n Table 3: Survival Rate and Mortality Rate")
print(table2[['country', 'cancer_type', 'year', 'survival_rate', 'mortality_rate']].head())

# ------------------- PLOTS -------------------

# Bar Plot: Total patients per country
plt.figure(figsize=(14,6))
sns.barplot(data=table2.groupby('country')['patients'].sum().reset_index(),
            x='country', y='patients', palette='viridis')
plt.title(' Total Patients per Country')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Bar Plot: Total patients per cancer type
plt.figure(figsize=(14,6))
sns.barplot(data=table2.groupby('cancer_type')['patients'].sum().reset_index(),
            x='cancer_type', y='patients', palette='plasma')
plt.title(' Total Patients per Cancer Type')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Line Plot: Trends over years
yearly = table2.groupby('year')[['patients', 'deaths', 'survivors']].sum().reset_index()
plt.figure(figsize=(10,6))
plt.plot(yearly['year'], yearly['patients'], marker='o', label='Patients')
plt.plot(yearly['year'], yearly['deaths'], marker='o', label='Deaths')
plt.plot(yearly['year'], yearly['survivors'], marker='o', label='Survivors')
plt.title(' Yearly Trends (Patients, Deaths, Survivors)')
plt.xlabel('Year')
plt.ylabel('Count')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Pie Chart: Cancer type distribution in a specific country
country_example = 'USA'  # Replace with any country name in your data
if country_example in df['country'].unique():
    pie_data = df[df['country'] == country_example]['cancer_type'].value_counts()
    plt.figure(figsize=(8,8))
    pie_data.plot.pie(autopct='%1.1f%%', startangle=90, cmap='tab20')
    plt.title(f' Cancer Type Distribution in {country_example}')
    plt.ylabel('')
    plt.tight_layout()
    plt.show()
else:
    print(f"⚠️ Country '{country_example}' not found in dataset.")

# Scatter Plot: Survival vs Mortality Rate
plt.figure(figsize=(10,6))
sns.scatterplot(data=table2, x='survival_rate', y='mortality_rate', hue='country')
plt.title(' Survival Rate vs Mortality Rate')
plt.xlabel('Survival Rate (%)')
plt.ylabel('Mortality Rate (%)')
plt.grid(True)
plt.tight_layout()
plt.show()